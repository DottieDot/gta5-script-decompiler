use strum::EnumString;

#[derive(EnumString, Clone, Debug)]
pub enum Instruction {
  Nop,
  IntegerAdd,
  IntegerSubtract,
  IntegerMultiply,
  IntegerDivide,
  IntegerModulo,
  IntegerNot,
  IntegerNegate,
  IntegerEquals,
  IntegerNotEquals,
  IntegerGreaterThan,
  IntegerGreaterOrEqual,
  IntegerLowerThan,
  IntegerLowerOrEqual,
  FloatAdd,
  FloatSubtract,
  FloatMultiply,
  FloatDivide,
  FloatModule,
  FloatNegate,
  FloatEquals,
  FloatNotEquals,
  FloatGreaterThan,
  FloatGreaterOrEqual,
  FloatLowerThan,
  FloatLowerOrEqual,
  VectorAdd,
  VectorSubtract,
  VectorMultiply,
  VectorDivide,
  VectorNegate,
  BitwiseAnd,
  BitwiseOr,
  BitwiseXor,
  IntegerToFloat,
  FloatToInteger,
  FloatToVector,
  PushConstU8(u8),
  PushConstU8U8(u8, u8),
  PushConstU8U8U8(u8, u8, u8),
  PushConstU32(u32),
  PushConstFloat(f32),
  Dup,
  Drop,
  NativeCall {
    arg_count: u8,
    return_count: u8,
    native_index: u16,
  },
  Enter {
    parameter_count: u8,
    var_count: u16,
    name: Option<String>,
  },
  Leave(u8, u8),
  Load,
  Store,
  StoreRev,
  LoadN,
  StoreN,
  ArrayU8(u8),
  ArrayU8Load(u8),
  ArrayU8Store(u8),
  LocalU8(u8),
  LocalU8Load(u8),
  LocalU8Store(u8),
  StaticU8(u8),
  StaticU8Load(u8),
  StaticU8Store(u8),
  AddU8(u8),
  MultiplyU8(u8),
  Offset,
  OffsetU8(u8),
  OffsetU8Load(u8),
  OffsetU8Store(u8),
  PushConstS16(i16),
  AddS16(i16),
  MultiplyS16(i16),
  OffsetS16(i16),
  OffsetS16Load(i16),
  OffsetS16Store(i16),
  ArrayU16(u16),
  ArrayU16Load(u16),
  ArrayU16Store(u16),
  LocalU16(u16),
  LocalU16Load(u16),
  LocalU16Store(u16),
  StaticU16(u16),
  StaticU16Load(u16),
  StaticU16Store(u16),
  GlobalU16(u16),
  GlobalU16Load(u16),
  GlobalU16Store(u16),
  Jump(u32),
  JumpZero(u32),
  IfEqualJump(u32),
  IfNotEqualJump(u32),
  IfGreaterThanJump(u32),
  IfGreaterOrEqualJump(u32),
  IfLowerThanJump(u32),
  IfLowerOrEqualJump(u32),
  FunctionCall(u32),
  StaticU24(u32),
  StaticU24Load(u32),
  StaticU24Store(u32),
  GlobalU24(u32),
  GlobalU24Load(u32),
  GlobalU24Store(u32),
  PushConstU24(u32),
  Switch(Vec<(u32, u32)>),
  String,
  StringHash,
  TextLabelAssignString(u8),
  TextLabelAssignInt(u8),
  TextLabelAppendString(u8),
  TextLabelAppendInt(u8),
  TextLabelCopy,
  Catch,
  Throw,
  CallIndirect,
  PushConstM1,
  PushConst0,
  PushConst1,
  PushConst2,
  PushConst3,
  PushConst4,
  PushConst5,
  PushConst6,
  PushConst7,
  PushConstFm1,
  PushConstF0,
  PushConstF1,
  PushConstF2,
  PushConstF3,
  PushConstF4,
  PushConstF5,
  PushConstF6,
  PushConstF7,
  BitTest,
}
